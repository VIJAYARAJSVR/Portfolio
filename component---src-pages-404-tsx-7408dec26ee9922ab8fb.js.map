{"version":3,"file":"component---src-pages-404-tsx-7408dec26ee9922ab8fb.js","mappings":"iLAKA,MAWMA,EAASC,IAAoB,IAAnB,UAAEC,GAAWD,EAC3B,OACEE,EAAAA,cAAA,OAAKC,UAAU,kDACbD,EAAAA,cAAA,OAAKC,UAAU,mBAEbD,EAAAA,cAAA,UACEC,UAAU,iBACVC,KAAK,SACL,iBAAe,WACf,iBAAe,eACf,gBAAc,cACd,gBAAc,QACd,aAAW,qBAEXF,EAAAA,cAAA,QAAMC,UAAU,yBAGlBD,EAAAA,cAAA,OAAKC,UAAU,2BAA2BE,GAAG,eAC3CH,EAAAA,cAAA,MAAIC,UAAU,mCACZD,EAAAA,cAAA,MAAIC,UAAU,YAGL,QAITD,EAAAA,cAAA,MAAIC,UAAU,YACoB,YAOpC,EAQVJ,EAAOO,aAAe,CACpBL,UAAU,IAGZ,QCrBA,MAhCeM,IAAmB,IAADC,EAAA,IAAjB,SAAEC,GAAUF,GAI1BG,EAAAA,EAAAA,YAAU,KACRC,YAAW,KACTC,OAAOC,SAASC,KALD,4CAKkB,GAJf,IAKH,GAChB,IAEH,MAAMC,GAAOC,EAAAA,EAAAA,gBAAe,cAU5B,OACEd,EAAAA,cAAA,OAAKC,UAAU,uBACbD,EAAAA,cAACH,EAAM,CAACE,WAAiC,QAAtBO,EAAAO,EAAKE,KAAKC,oBAAY,IAAAV,OAAA,EAAtBA,EAAwBW,QAAK,UAChDjB,EAAAA,cAAA,YAAOO,GACH,C,+ECfV,MAhBwBW,KACTJ,EAAAA,EAAAA,gBAAe,YAYhBC,KAAKC,aCXZ,MAAMG,EAAMd,IAAiD,IAAhD,MAAEY,EAAK,YAAEG,EAAW,SAAEC,EAAQ,SAAEd,GAAUF,EAC5D,MACEY,MAAOK,EACPF,YAAaG,EAAkB,QAC/BC,GACEN,IAEEO,EAAM,CACVR,MAAOA,GAASK,EAChBF,YAAaA,GAAeG,EAC5BG,IAAI,GAAIF,GAAUH,GAAQ,KAG5B,OACErB,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,aAAQyB,EAAIR,OACZjB,EAAAA,cAAA,QAAM2B,KAAK,cAAcC,QAASH,EAAIL,cACtCpB,EAAAA,cAAA,QAAM2B,KAAK,gBAAgBC,QAASH,EAAIR,QACxCjB,EAAAA,cAAA,QAAM2B,KAAK,cAAcC,QAASH,EAAIC,MACtC1B,EAAAA,cAAA,QAAM2B,KAAK,sBAAsBC,QAASH,EAAIL,cAC7Cb,EACA,C,mGCVP,UAVqBsB,IACnB7B,EAAAA,cAAC8B,EAAAA,EAAM,KACL9B,EAAAA,cAAA,OAAKC,UAAU,8BACbD,EAAAA,cAAA,UAAI,kBACJA,EAAAA,cAAA,SAAG,6DAQF,MAAM+B,EAAOA,IAChB/B,EAAAA,cAACmB,EAAAA,EAAG,CAACF,MAAM,kB","sources":["webpack://vijayarajsuyambu/./src/components/navbar.tsx","webpack://vijayarajsuyambu/./src/components/layout.tsx","webpack://vijayarajsuyambu/./src/hooks/use-site-metadata.tsx","webpack://vijayarajsuyambu/./src/components/seo.tsx","webpack://vijayarajsuyambu/./src/pages/404.tsx"],"sourcesContent":["import * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Link } from \"gatsby\"\n\n// @ts-ignore\nconst isActive = ({ isCurrent }) => {\n  return isCurrent\n    ? { className: \"nav-link active\" }\n    : { className: \"nav-link\" }\n}\n\n// const ExactNavLink = props => (\n//   <Link getProps={isActive} {...props} />\n// )\n\n// @ts-ignore\nconst Navbar = ({ siteTitle }) => {\n  return (\n    <nav className=\"navbar navbar-expand-md navbar-dark bg-primary\">\n      <div className=\"container-fluid\">\n        {/*<Link to=\"/\" className=\"navbar-brand\" href=\"#\">{siteTitle}</Link>*/}\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-bs-toggle=\"collapse\"\n          data-bs-target=\"#main-navbar\"\n          aria-controls=\"main-navbar\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n\n        <div className=\"collapse navbar-collapse\" id=\"main-navbar\">\n          <ul className=\"navbar-nav me-auto mb-2 mb-md-0\">\n            <li className=\"nav-item\">\n              {/*<ExactNavLink*/}\n              {/*  to=\"/\"*/}\n              {/*>*/}\n              Home\n              {/*</ExactNavLink>*/}\n            </li>\n            <li className=\"nav-item\">\n              {/*<ExactNavLink to=\"/about\">*/}\n              About\n              {/*</ExactNavLink>*/}\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  )\n}\n\nNavbar.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nNavbar.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Navbar\n","import * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Navbar from \"./navbar\"\nimport \"./layout.scss\"\nimport { useEffect } from \"react\"\n\n// @ts-ignore\nconst Layout = ({ children }) => {\n  const defaulturl = \"https://vijayarajsvr.github.io/Portfolio1/\"\n  const default_delay = 1000\n\n  useEffect(() => {\n    setTimeout(() => {\n      window.location.href = defaulturl\n    }, default_delay)\n  }, [])\n\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <div className=\"container-fluid p-0\">\n      <Navbar siteTitle={data.site.siteMetadata?.title || `Title`} />\n      <main>{children}</main>\n    </div>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import { graphql, useStaticQuery } from \"gatsby\"\n\nconst useSiteMetadata = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n          description\n          author\n        }\n      }\n    }\n  `)\n\n  return data.site.siteMetadata\n}\n\nexport default useSiteMetadata\n","import React from \"react\"\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\n\n// @ts-ignore\nexport const Seo = ({ title, description, pathname, children }) => {\n  const {\n    title: defaultTitle,\n    description: defaultDescription,\n    siteUrl,\n  } = useSiteMetadata()\n\n  const seo = {\n    title: title || defaultTitle,\n    description: description || defaultDescription,\n    url: `${siteUrl}${pathname || ``}`,\n  }\n\n  return (\n    <>\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      {children}\n    </>\n  )\n}\n","import * as React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport {Seo} from \"../components/seo\"\n\nconst NotFoundPage = () => (\n  <Layout>\n    <div className=\"container text-center my-5\">\n      <h1>404: Not Found</h1>\n      <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n    </div>\n\n  </Layout>\n)\n\nexport default NotFoundPage\n\nexport const Head = () => (\n    <Seo title=\"404: Not found\" />\n)\n"],"names":["Navbar","_ref2","siteTitle","React","className","type","id","defaultProps","_ref","_data$site$siteMetada","children","useEffect","setTimeout","window","location","href","data","useStaticQuery","site","siteMetadata","title","useSiteMetadata","Seo","description","pathname","defaultTitle","defaultDescription","siteUrl","seo","url","name","content","NotFoundPage","Layout","Head"],"sourceRoot":""}